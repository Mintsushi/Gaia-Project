 protected static class PlantInfo implements View.OnTouchListener,View.OnClickListener{
        private int id;
        private ImageView plant;
        private ImageView water;
        private String name;
        private int lv;
        private int time; //물을 줘야하는 시간
        //state == 0 : overlayview에 없음
        //state == 1 : overlayview에 있음
        private int state;
        //waterState == 0 : 물을 준 상태
        //waterState == 1 : 물을 주지 않은 상태
        private int waterState = 0;

        private Boolean moving = false;
        private int originalXPos, originalYPos;

        public PlantInfo(int id, ImageView plant, String name,int lv){

            mHandler.sendEmptyMessage(0);

            this.id = id;
            this.lv = lv;
            this.plant = plant;
            this.name = name;
            //서버에서 받아온 정보로 수정
            this.state = 0;
            if(state == 1){
                mOverlayService.addPlant(this);
            }

            //나중에 식물 정보 받아오면 그 때 넣자
            time = 600000;
            water = new ImageView(context);
            water.setImageResource(R.drawable.image);

            water.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    Log.i(TAG,"물을 준다.");
                    //물을 준다.
                    waterState = 0;
                    water.setVisibility(View.INVISIBLE);
                }
            });

            RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(100, 100);
            int [] location = new int[2];
            plant.getLocationOnScreen(location);
            params.leftMargin = location[0]+100;
            params.topMargin = location[1]-20;

            relLayout.addView(water,params);
            water.setVisibility(View.INVISIBLE);
        }


        public int getId(){return this.id;}
        public String getName(){return this.name;}
        public ImageView getPlant(){return this.plant;}
        public int getState(){return this.state;}
        public void setState(int state){
            this.state = state;
        }
        public void setLv(){this.lv += 1;}

        public void remove(){
            relLayout.removeView(this.plant);
            relLayout.removeView(this.water);
            state = 1;
        }

        public void setView(){
            relLayout.addView(this.plant);
            relLayout.addView(this.water);
        }

        public void setTouchistener(){
            plant.setOnTouchListener(this);
            plant.setOnClickListener(this);
        }

        public void clearTouchListener(){
            plant.setOnTouchListener(null);
        }

        public void updateWaterLocation(){

            RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(100, 100);
            int [] location = new int[2];
            plant.getLocationOnScreen(location);
            params.leftMargin = location[0]+100;
            params.topMargin = location[1]-170;

            relLayout.updateViewLayout(water,params);
        }

        @Override
        public void onClick(View view){}

        @Override
        public boolean onTouch(View view, MotionEvent motionEvent){
            if(motionEvent.getAction() == MotionEvent.ACTION_DOWN){

                Log.i(TAG,"ImageVeiw Touch Down");

                moving = false;

                int [] location = new int[2];
                view.getLocationOnScreen(location);

                originalXPos = location[0];
                originalYPos = location[1];
            }
            else if(motionEvent.getAction() == MotionEvent.ACTION_MOVE){

                moving = true;

                Log.i(TAG,"ImageView Touch Move");

                int x = (int)motionEvent.getRawX();
                int y = (int)motionEvent.getRawY();

                RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams)view.getLayoutParams();

                if (Math.abs(x - originalXPos) < 1 && Math.abs(y - originalYPos) < 1 && !moving) {
                    return false;
                }

                params.leftMargin = x-170;
                params.topMargin = y-150;
                relLayout.updateViewLayout(view,params);
                updateWaterLocation();

            }
            else if(motionEvent.getAction() == MotionEvent.ACTION_UP){

                Log.i(TAG,"ImageView Touch Up");
                moving = false;
            }
            return false;
        }

        private android.os.Handler mHandler = new android.os.Handler(){
            public void handleMessage(Message msg){
                Log.i(TAG,"Handler Message : "+waterState);

                //나중에 image가 확립되면 좀더 세부적으로 위치 조정
                if(waterState == 0) {
                    water.setVisibility(View.VISIBLE);
                    waterState = 1;
                }
                else{
                    //시간 내에 물을 주지 않으면
                    Toast.makeText(context,"물 줘 이뇬아!",Toast.LENGTH_LONG).show();
                }
                mHandler.sendEmptyMessageDelayed(0,time);
            }
        };
    }