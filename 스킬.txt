 // 구매버튼
                viewHolder.productBuyButton.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {

                        final StoreCheckDialog dialog = new StoreCheckDialog(getContext());
                        dialog.setOnShowListener(new DialogInterface.OnShowListener() {
                            @Override
                            public void onShow(DialogInterface dialogInterface) {
                                dialog.setImage(info.getImage());
                                dialog.setName(info.getItemName());
                                dialog.setExplain(info.getItemExplain());

                                // 구매에 사용하는 재화의 정보 보내기
                                if (info.getSeedCost().get(-1) != null) {
                                    dialog.setUseCost(1,info.getFruitCost());
                                    dialog.setPreCost(1,dataList.getFruitHashMap());
                                } else {
                                    dialog.setUseCost(0,info.getSeedCost());
                                    dialog.setPreCost(0,dataList.getScoreHashMap());
                                }
                            }
                        });

                        dialog.setOnDismissListener(new DialogInterface.OnDismissListener() {
                            @Override
                            public void onDismiss(DialogInterface dia) {
                                // 구매 성공시..
                                if (dialog.buySuccess == 1) {

                                    dataList.getGoalDataByID(7).setGoalRate(1);
                                    dataList.setIncItemNumber(info.getItemCode() - 1, 1);

                                    // 만약 1번 아이템이면 10분동안 점수획득후 아이템 감소 하게됨
                                    if(info.getItemId()==0){
                                        itemskillTimemer itemskillTimemer = new itemskillTimemer(600);
                                        itemskillTimemer.handlerStart();
                                    }

                                    mAdapter.notifyDataSetChanged();
                                    Toast.makeText(getActivity(), "구매성공", Toast.LENGTH_SHORT).show();
                                }
                                else {
                                    if(dialog.costType == -1){
                                        //취소버튼 누른경우
                                    }
                                    else if(dialog.costType ==1){
                                        Toast.makeText(getActivity(), "열매가 부족해요!", Toast.LENGTH_SHORT).show();
                                    }else {
                                        Toast.makeText(getActivity(), "씨앗이 부족해요!", Toast.LENGTH_SHORT).show();
                                    }

                                }

                            }
                        });
                        dialog.show();

                    }
                });